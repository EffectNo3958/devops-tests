---
# tasks file for deploy_java

- name: java_home
  debug: "msg={{ java_home }}"
- name: java_archive
  debug: "msg={{ java_archive }}"
- name: download_url
  debug: "msg={{ download_url }}"
- name: download_folder
  debug: "msg={{ download_folder }}"
- name: java_env_file
  debug: "msg={{ java_env_file }}"

- name: Check If java is already installed or not
  shell: "{{ java_home }}/bin/java -version 2>&1 | grep version | awk '{print $3}' | sed 's/\"//g'"
  register: java_installed

- name: Check installed java version
  debug: "msg={{ java_installed.stdout }}"

- block:
    - name: Download Java
      #command: "wget -q -O {{ java_archive }} --no-check-certificate --no-cookies --header 'Cookie: oraclelicense=accept-securebackup-cookie' {{ download_url }} creates={{ java_archive }}" ## Old way to download
      get_url:
        url: "{{ download_url }}"
        dest: "{{ java_archive }}"
        validate_certs: false

    - name: Unpack Java archive to JAVA_HOME
      #command: "tar -zxf {{ java_archive }} -C {{ download_folder }} creates={{ java_home }}" ## Old way to untar
      ansible.builtin.unarchive:
        src: "{{ java_archive }}"
        dest: "{{ java_home | dirname }}"
        remote_src: yes

    - name: Fix ownership of JAVA_HOME
      file:
        state: directory
        path: "{{ java_home }}"
        owner: root
        group: root
        recurse: yes

    - name: Create a directory /usr/bin/java if it does not exist
      file:
        path: /usr/bin/java
        state: directory
        mode: '0755'

    - name: Make Java available for system for RedHat
      command: 'alternatives --install "/usr/bin/java" "java" "{{ java_home }}/bin/java" 2000'
      when: ansible_os_family == "RedHat"

    - name: Make Java available for system for Debian
      command: 'update-alternatives --install "/usr/bin/java" "java" "{{ java_home }}/bin/java" 2000'
      when: ansible_os_family == "Debian"

    - name: Set/Configure JAVA_HOME in environment variables
      shell: "echo 'export JAVA_HOME={{ java_home }}\n export PATH=$JAVA_HOME/bin:$PATH' >> {{ java_env_file }}"

    - name: Exports/Run java env file for make JAVA_HOME available globally
      shell: "source {{ java_env_file }}"
      args:
        executable: /bin/bash

    - name: Clean up
      file:
        state: absent
        path: "{{ java_archive }}"
  when: java_installed.stdout == ""
...